
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000002c8  08000198  08000198  00001198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000460  08000468  00001468  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000460  08000460  00001468  2**0
                  CONTENTS
  4 .ARM          00000000  08000460  08000460  00001468  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000460  08000468  00001468  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000460  08000460  00001460  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000464  08000464  00001464  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00001468  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000468  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000468  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00001468  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000082c  00000000  00000000  00001498  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000242  00000000  00000000  00001cc4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b0  00000000  00000000  00001f08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000078  00000000  00000000  00001fb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000013c9  00000000  00000000  00002030  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000c77  00000000  00000000  000033f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000055a4  00000000  00000000  00004070  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00009614  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000200  00000000  00000000  00009658  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004c  00000000  00000000  00009858  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	@ (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	@ (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000448 	.word	0x08000448

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	@ (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	@ (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	08000448 	.word	0x08000448

080001d8 <main>:

void delay(){
    for(uint32_t i = 0;i < 500000;i++);
}

int main(void) {
 80001d8:	b580      	push	{r7, lr}
 80001da:	b084      	sub	sp, #16
 80001dc:	af00      	add	r7, sp, #0
    // GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
    // GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
    // GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
    // GPIO_PeriClockControl(GPIOD,ENABLE);
    // GPIO_Init(&GpioLed);
    GPIO_DeInit(GPIOD);
 80001de:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <main+0x18>)
 80001e0:	f000 f832 	bl	8000248 <GPIO_DeInit>
    // while(1){
    //     GPIO_ToggleOutPutPin(GPIOD,GPIO_PIN_NO_12);
    //     delay();
    // }
    return 0;
 80001e4:	2300      	movs	r3, #0
}
 80001e6:	4618      	mov	r0, r3
 80001e8:	3710      	adds	r7, #16
 80001ea:	46bd      	mov	sp, r7
 80001ec:	bd80      	pop	{r7, pc}
 80001ee:	bf00      	nop
 80001f0:	40020c00 	.word	0x40020c00

080001f4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001f4:	480d      	ldr	r0, [pc, #52]	@ (800022c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001f6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001f8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001fc:	480c      	ldr	r0, [pc, #48]	@ (8000230 <LoopForever+0x6>)
  ldr r1, =_edata
 80001fe:	490d      	ldr	r1, [pc, #52]	@ (8000234 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000200:	4a0d      	ldr	r2, [pc, #52]	@ (8000238 <LoopForever+0xe>)
  movs r3, #0
 8000202:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000204:	e002      	b.n	800020c <LoopCopyDataInit>

08000206 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000206:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000208:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800020a:	3304      	adds	r3, #4

0800020c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800020c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800020e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000210:	d3f9      	bcc.n	8000206 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000212:	4a0a      	ldr	r2, [pc, #40]	@ (800023c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000214:	4c0a      	ldr	r4, [pc, #40]	@ (8000240 <LoopForever+0x16>)
  movs r3, #0
 8000216:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000218:	e001      	b.n	800021e <LoopFillZerobss>

0800021a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800021a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800021c:	3204      	adds	r2, #4

0800021e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800021e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000220:	d3fb      	bcc.n	800021a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000222:	f000 f8ed 	bl	8000400 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000226:	f7ff ffd7 	bl	80001d8 <main>

0800022a <LoopForever>:

LoopForever:
  b LoopForever
 800022a:	e7fe      	b.n	800022a <LoopForever>
  ldr   r0, =_estack
 800022c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000230:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000234:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000238:	08000468 	.word	0x08000468
  ldr r2, =_sbss
 800023c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000240:	2000001c 	.word	0x2000001c

08000244 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000244:	e7fe      	b.n	8000244 <ADC_IRQHandler>
	...

08000248 <GPIO_DeInit>:
        temp2 = pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber % 8;
        pGPIO_Handle->pGPIOx->AFR[temp1] &= ~(0xF << (4*temp2));
        pGPIO_Handle->pGPIOx->AFR[temp1] |= pGPIO_Handle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2);
    }
};
void GPIO_DeInit(GPIO_RegDef_t *pGPIOx){
 8000248:	b480      	push	{r7}
 800024a:	b083      	sub	sp, #12
 800024c:	af00      	add	r7, sp, #0
 800024e:	6078      	str	r0, [r7, #4]
    if (pGPIOx == GPIOA) {
 8000250:	687b      	ldr	r3, [r7, #4]
 8000252:	4a5f      	ldr	r2, [pc, #380]	@ (80003d0 <GPIO_DeInit+0x188>)
 8000254:	4293      	cmp	r3, r2
 8000256:	d10c      	bne.n	8000272 <GPIO_DeInit+0x2a>
      GPIOA_REG_RESET;
 8000258:	4b5e      	ldr	r3, [pc, #376]	@ (80003d4 <GPIO_DeInit+0x18c>)
 800025a:	691b      	ldr	r3, [r3, #16]
 800025c:	4a5d      	ldr	r2, [pc, #372]	@ (80003d4 <GPIO_DeInit+0x18c>)
 800025e:	f043 0301 	orr.w	r3, r3, #1
 8000262:	6113      	str	r3, [r2, #16]
 8000264:	4b5b      	ldr	r3, [pc, #364]	@ (80003d4 <GPIO_DeInit+0x18c>)
 8000266:	691b      	ldr	r3, [r3, #16]
 8000268:	4a5a      	ldr	r2, [pc, #360]	@ (80003d4 <GPIO_DeInit+0x18c>)
 800026a:	f023 0301 	bic.w	r3, r3, #1
 800026e:	6113      	str	r3, [r2, #16]
    } else if (pGPIOx == GPIOJ) {
      GPIOJ_REG_RESET;
    } else if (pGPIOx == GPIOK) {
      GPIOK_REG_RESET;
    }
};
 8000270:	e0a8      	b.n	80003c4 <GPIO_DeInit+0x17c>
    } else if (pGPIOx == GPIOB) {
 8000272:	687b      	ldr	r3, [r7, #4]
 8000274:	4a58      	ldr	r2, [pc, #352]	@ (80003d8 <GPIO_DeInit+0x190>)
 8000276:	4293      	cmp	r3, r2
 8000278:	d10c      	bne.n	8000294 <GPIO_DeInit+0x4c>
      GPIOB_REG_RESET;
 800027a:	4b56      	ldr	r3, [pc, #344]	@ (80003d4 <GPIO_DeInit+0x18c>)
 800027c:	691b      	ldr	r3, [r3, #16]
 800027e:	4a55      	ldr	r2, [pc, #340]	@ (80003d4 <GPIO_DeInit+0x18c>)
 8000280:	f043 0302 	orr.w	r3, r3, #2
 8000284:	6113      	str	r3, [r2, #16]
 8000286:	4b53      	ldr	r3, [pc, #332]	@ (80003d4 <GPIO_DeInit+0x18c>)
 8000288:	691b      	ldr	r3, [r3, #16]
 800028a:	4a52      	ldr	r2, [pc, #328]	@ (80003d4 <GPIO_DeInit+0x18c>)
 800028c:	f023 0302 	bic.w	r3, r3, #2
 8000290:	6113      	str	r3, [r2, #16]
};
 8000292:	e097      	b.n	80003c4 <GPIO_DeInit+0x17c>
    } else if (pGPIOx == GPIOC) {
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4a51      	ldr	r2, [pc, #324]	@ (80003dc <GPIO_DeInit+0x194>)
 8000298:	4293      	cmp	r3, r2
 800029a:	d10c      	bne.n	80002b6 <GPIO_DeInit+0x6e>
      GPIOC_REG_RESET;
 800029c:	4b4d      	ldr	r3, [pc, #308]	@ (80003d4 <GPIO_DeInit+0x18c>)
 800029e:	691b      	ldr	r3, [r3, #16]
 80002a0:	4a4c      	ldr	r2, [pc, #304]	@ (80003d4 <GPIO_DeInit+0x18c>)
 80002a2:	f043 0304 	orr.w	r3, r3, #4
 80002a6:	6113      	str	r3, [r2, #16]
 80002a8:	4b4a      	ldr	r3, [pc, #296]	@ (80003d4 <GPIO_DeInit+0x18c>)
 80002aa:	691b      	ldr	r3, [r3, #16]
 80002ac:	4a49      	ldr	r2, [pc, #292]	@ (80003d4 <GPIO_DeInit+0x18c>)
 80002ae:	f023 0304 	bic.w	r3, r3, #4
 80002b2:	6113      	str	r3, [r2, #16]
};
 80002b4:	e086      	b.n	80003c4 <GPIO_DeInit+0x17c>
    } else if (pGPIOx == GPIOD) {
 80002b6:	687b      	ldr	r3, [r7, #4]
 80002b8:	4a49      	ldr	r2, [pc, #292]	@ (80003e0 <GPIO_DeInit+0x198>)
 80002ba:	4293      	cmp	r3, r2
 80002bc:	d10c      	bne.n	80002d8 <GPIO_DeInit+0x90>
      GPIOD_REG_RESET;
 80002be:	4b45      	ldr	r3, [pc, #276]	@ (80003d4 <GPIO_DeInit+0x18c>)
 80002c0:	691b      	ldr	r3, [r3, #16]
 80002c2:	4a44      	ldr	r2, [pc, #272]	@ (80003d4 <GPIO_DeInit+0x18c>)
 80002c4:	f043 0308 	orr.w	r3, r3, #8
 80002c8:	6113      	str	r3, [r2, #16]
 80002ca:	4b42      	ldr	r3, [pc, #264]	@ (80003d4 <GPIO_DeInit+0x18c>)
 80002cc:	691b      	ldr	r3, [r3, #16]
 80002ce:	4a41      	ldr	r2, [pc, #260]	@ (80003d4 <GPIO_DeInit+0x18c>)
 80002d0:	f023 0308 	bic.w	r3, r3, #8
 80002d4:	6113      	str	r3, [r2, #16]
};
 80002d6:	e075      	b.n	80003c4 <GPIO_DeInit+0x17c>
    } else if (pGPIOx == GPIOE) {
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	4a42      	ldr	r2, [pc, #264]	@ (80003e4 <GPIO_DeInit+0x19c>)
 80002dc:	4293      	cmp	r3, r2
 80002de:	d10c      	bne.n	80002fa <GPIO_DeInit+0xb2>
      GPIOE_REG_RESET;
 80002e0:	4b3c      	ldr	r3, [pc, #240]	@ (80003d4 <GPIO_DeInit+0x18c>)
 80002e2:	691b      	ldr	r3, [r3, #16]
 80002e4:	4a3b      	ldr	r2, [pc, #236]	@ (80003d4 <GPIO_DeInit+0x18c>)
 80002e6:	f043 0310 	orr.w	r3, r3, #16
 80002ea:	6113      	str	r3, [r2, #16]
 80002ec:	4b39      	ldr	r3, [pc, #228]	@ (80003d4 <GPIO_DeInit+0x18c>)
 80002ee:	691b      	ldr	r3, [r3, #16]
 80002f0:	4a38      	ldr	r2, [pc, #224]	@ (80003d4 <GPIO_DeInit+0x18c>)
 80002f2:	f023 0310 	bic.w	r3, r3, #16
 80002f6:	6113      	str	r3, [r2, #16]
};
 80002f8:	e064      	b.n	80003c4 <GPIO_DeInit+0x17c>
    } else if (pGPIOx == GPIOF) {
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	4a3a      	ldr	r2, [pc, #232]	@ (80003e8 <GPIO_DeInit+0x1a0>)
 80002fe:	4293      	cmp	r3, r2
 8000300:	d10c      	bne.n	800031c <GPIO_DeInit+0xd4>
      GPIOF_REG_RESET;
 8000302:	4b34      	ldr	r3, [pc, #208]	@ (80003d4 <GPIO_DeInit+0x18c>)
 8000304:	691b      	ldr	r3, [r3, #16]
 8000306:	4a33      	ldr	r2, [pc, #204]	@ (80003d4 <GPIO_DeInit+0x18c>)
 8000308:	f043 0320 	orr.w	r3, r3, #32
 800030c:	6113      	str	r3, [r2, #16]
 800030e:	4b31      	ldr	r3, [pc, #196]	@ (80003d4 <GPIO_DeInit+0x18c>)
 8000310:	691b      	ldr	r3, [r3, #16]
 8000312:	4a30      	ldr	r2, [pc, #192]	@ (80003d4 <GPIO_DeInit+0x18c>)
 8000314:	f023 0320 	bic.w	r3, r3, #32
 8000318:	6113      	str	r3, [r2, #16]
};
 800031a:	e053      	b.n	80003c4 <GPIO_DeInit+0x17c>
    } else if (pGPIOx == GPIOG) {
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	4a33      	ldr	r2, [pc, #204]	@ (80003ec <GPIO_DeInit+0x1a4>)
 8000320:	4293      	cmp	r3, r2
 8000322:	d10c      	bne.n	800033e <GPIO_DeInit+0xf6>
      GPIOG_REG_RESET;
 8000324:	4b2b      	ldr	r3, [pc, #172]	@ (80003d4 <GPIO_DeInit+0x18c>)
 8000326:	691b      	ldr	r3, [r3, #16]
 8000328:	4a2a      	ldr	r2, [pc, #168]	@ (80003d4 <GPIO_DeInit+0x18c>)
 800032a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800032e:	6113      	str	r3, [r2, #16]
 8000330:	4b28      	ldr	r3, [pc, #160]	@ (80003d4 <GPIO_DeInit+0x18c>)
 8000332:	691b      	ldr	r3, [r3, #16]
 8000334:	4a27      	ldr	r2, [pc, #156]	@ (80003d4 <GPIO_DeInit+0x18c>)
 8000336:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800033a:	6113      	str	r3, [r2, #16]
};
 800033c:	e042      	b.n	80003c4 <GPIO_DeInit+0x17c>
    } else if (pGPIOx == GPIOH) {
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	4a2b      	ldr	r2, [pc, #172]	@ (80003f0 <GPIO_DeInit+0x1a8>)
 8000342:	4293      	cmp	r3, r2
 8000344:	d10c      	bne.n	8000360 <GPIO_DeInit+0x118>
      GPIOH_REG_RESET;
 8000346:	4b23      	ldr	r3, [pc, #140]	@ (80003d4 <GPIO_DeInit+0x18c>)
 8000348:	691b      	ldr	r3, [r3, #16]
 800034a:	4a22      	ldr	r2, [pc, #136]	@ (80003d4 <GPIO_DeInit+0x18c>)
 800034c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000350:	6113      	str	r3, [r2, #16]
 8000352:	4b20      	ldr	r3, [pc, #128]	@ (80003d4 <GPIO_DeInit+0x18c>)
 8000354:	691b      	ldr	r3, [r3, #16]
 8000356:	4a1f      	ldr	r2, [pc, #124]	@ (80003d4 <GPIO_DeInit+0x18c>)
 8000358:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800035c:	6113      	str	r3, [r2, #16]
};
 800035e:	e031      	b.n	80003c4 <GPIO_DeInit+0x17c>
    } else if (pGPIOx == GPIOI) {
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a24      	ldr	r2, [pc, #144]	@ (80003f4 <GPIO_DeInit+0x1ac>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d10c      	bne.n	8000382 <GPIO_DeInit+0x13a>
      GPIOI_REG_RESET;
 8000368:	4b1a      	ldr	r3, [pc, #104]	@ (80003d4 <GPIO_DeInit+0x18c>)
 800036a:	691b      	ldr	r3, [r3, #16]
 800036c:	4a19      	ldr	r2, [pc, #100]	@ (80003d4 <GPIO_DeInit+0x18c>)
 800036e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000372:	6113      	str	r3, [r2, #16]
 8000374:	4b17      	ldr	r3, [pc, #92]	@ (80003d4 <GPIO_DeInit+0x18c>)
 8000376:	691b      	ldr	r3, [r3, #16]
 8000378:	4a16      	ldr	r2, [pc, #88]	@ (80003d4 <GPIO_DeInit+0x18c>)
 800037a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800037e:	6113      	str	r3, [r2, #16]
};
 8000380:	e020      	b.n	80003c4 <GPIO_DeInit+0x17c>
    } else if (pGPIOx == GPIOJ) {
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4a1c      	ldr	r2, [pc, #112]	@ (80003f8 <GPIO_DeInit+0x1b0>)
 8000386:	4293      	cmp	r3, r2
 8000388:	d10c      	bne.n	80003a4 <GPIO_DeInit+0x15c>
      GPIOJ_REG_RESET;
 800038a:	4b12      	ldr	r3, [pc, #72]	@ (80003d4 <GPIO_DeInit+0x18c>)
 800038c:	691b      	ldr	r3, [r3, #16]
 800038e:	4a11      	ldr	r2, [pc, #68]	@ (80003d4 <GPIO_DeInit+0x18c>)
 8000390:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000394:	6113      	str	r3, [r2, #16]
 8000396:	4b0f      	ldr	r3, [pc, #60]	@ (80003d4 <GPIO_DeInit+0x18c>)
 8000398:	691b      	ldr	r3, [r3, #16]
 800039a:	4a0e      	ldr	r2, [pc, #56]	@ (80003d4 <GPIO_DeInit+0x18c>)
 800039c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80003a0:	6113      	str	r3, [r2, #16]
};
 80003a2:	e00f      	b.n	80003c4 <GPIO_DeInit+0x17c>
    } else if (pGPIOx == GPIOK) {
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	4a15      	ldr	r2, [pc, #84]	@ (80003fc <GPIO_DeInit+0x1b4>)
 80003a8:	4293      	cmp	r3, r2
 80003aa:	d10b      	bne.n	80003c4 <GPIO_DeInit+0x17c>
      GPIOK_REG_RESET;
 80003ac:	4b09      	ldr	r3, [pc, #36]	@ (80003d4 <GPIO_DeInit+0x18c>)
 80003ae:	691b      	ldr	r3, [r3, #16]
 80003b0:	4a08      	ldr	r2, [pc, #32]	@ (80003d4 <GPIO_DeInit+0x18c>)
 80003b2:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80003b6:	6113      	str	r3, [r2, #16]
 80003b8:	4b06      	ldr	r3, [pc, #24]	@ (80003d4 <GPIO_DeInit+0x18c>)
 80003ba:	691b      	ldr	r3, [r3, #16]
 80003bc:	4a05      	ldr	r2, [pc, #20]	@ (80003d4 <GPIO_DeInit+0x18c>)
 80003be:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80003c2:	6113      	str	r3, [r2, #16]
};
 80003c4:	bf00      	nop
 80003c6:	370c      	adds	r7, #12
 80003c8:	46bd      	mov	sp, r7
 80003ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ce:	4770      	bx	lr
 80003d0:	40020000 	.word	0x40020000
 80003d4:	40023800 	.word	0x40023800
 80003d8:	40020400 	.word	0x40020400
 80003dc:	40020800 	.word	0x40020800
 80003e0:	40020c00 	.word	0x40020c00
 80003e4:	40021000 	.word	0x40021000
 80003e8:	40021400 	.word	0x40021400
 80003ec:	40021800 	.word	0x40021800
 80003f0:	40021c00 	.word	0x40021c00
 80003f4:	40022000 	.word	0x40022000
 80003f8:	40022400 	.word	0x40022400
 80003fc:	40022800 	.word	0x40022800

08000400 <__libc_init_array>:
 8000400:	b570      	push	{r4, r5, r6, lr}
 8000402:	4d0d      	ldr	r5, [pc, #52]	@ (8000438 <__libc_init_array+0x38>)
 8000404:	4c0d      	ldr	r4, [pc, #52]	@ (800043c <__libc_init_array+0x3c>)
 8000406:	1b64      	subs	r4, r4, r5
 8000408:	10a4      	asrs	r4, r4, #2
 800040a:	2600      	movs	r6, #0
 800040c:	42a6      	cmp	r6, r4
 800040e:	d109      	bne.n	8000424 <__libc_init_array+0x24>
 8000410:	4d0b      	ldr	r5, [pc, #44]	@ (8000440 <__libc_init_array+0x40>)
 8000412:	4c0c      	ldr	r4, [pc, #48]	@ (8000444 <__libc_init_array+0x44>)
 8000414:	f000 f818 	bl	8000448 <_init>
 8000418:	1b64      	subs	r4, r4, r5
 800041a:	10a4      	asrs	r4, r4, #2
 800041c:	2600      	movs	r6, #0
 800041e:	42a6      	cmp	r6, r4
 8000420:	d105      	bne.n	800042e <__libc_init_array+0x2e>
 8000422:	bd70      	pop	{r4, r5, r6, pc}
 8000424:	f855 3b04 	ldr.w	r3, [r5], #4
 8000428:	4798      	blx	r3
 800042a:	3601      	adds	r6, #1
 800042c:	e7ee      	b.n	800040c <__libc_init_array+0xc>
 800042e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000432:	4798      	blx	r3
 8000434:	3601      	adds	r6, #1
 8000436:	e7f2      	b.n	800041e <__libc_init_array+0x1e>
 8000438:	08000460 	.word	0x08000460
 800043c:	08000460 	.word	0x08000460
 8000440:	08000460 	.word	0x08000460
 8000444:	08000464 	.word	0x08000464

08000448 <_init>:
 8000448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800044a:	bf00      	nop
 800044c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800044e:	bc08      	pop	{r3}
 8000450:	469e      	mov	lr, r3
 8000452:	4770      	bx	lr

08000454 <_fini>:
 8000454:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000456:	bf00      	nop
 8000458:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800045a:	bc08      	pop	{r3}
 800045c:	469e      	mov	lr, r3
 800045e:	4770      	bx	lr
